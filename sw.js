// service-worker.js

// Evento de instala√ß√£o do Service Worker
self.addEventListener('install', event => {
  console.log('Service Worker instalado.');
  // For√ßa o novo Service Worker a se tornar ativo imediatamente
  self.skipWaiting();
});

// Evento de ativa√ß√£o do Service Worker
self.addEventListener('activate', event => {
  console.log('Service Worker ativado.');
  // Garante que o Service Worker tome controle da p√°gina imediatamente
  event.waitUntil(self.clients.claim());
});

// Evento que escuta mensagens vindas da p√°gina principal
self.addEventListener('message', event => {
  // Verifica se a a√ß√£o √© a que esperamos ('schedule-notification')
  if (event.data && event.data.action === 'schedule-notification') {
    console.log('Service Worker recebeu a mensagem para agendar notifica√ß√£o.');

    // Agenda a notifica√ß√£o para aparecer ap√≥s 10 segundos
    const notificationDelay = 10000; // 10 segundos em milissegundos

    setTimeout(() => {
      // Exibe a notifica√ß√£o
      self.registration.showNotification('üíé Hologram Coin üíé', {
        body: 'You have a pending message. Come back to see!',
        icon: 'assets/hannah.png', // Caminho para o √≠cone da notifica√ß√£o
        badge: 'assets/hannah.png', // √çcone para a barra de status (Android)
        vibrate: [200, 100, 200], // Padr√£o de vibra√ß√£o
        tag: 'hologram-notification-tag' // Agrupa notifica√ß√µes para n√£o spamar o usu√°rio
      });
      console.log('Notifica√ß√£o exibida!');
    }, notificationDelay);
  }
});
