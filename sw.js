// service-worker.js

self.addEventListener('install', event => {
  self.skipWaiting();
});

self.addEventListener('activate', event => {
  event.waitUntil(self.clients.claim());
});

// Evento que escuta mensagens vindas da p√°gina principal
self.addEventListener('message', event => {
  if (event.data && event.data.action === 'schedule-notification') {
    
    // Agenda a notifica√ß√£o para aparecer ap√≥s 10 segundos
    const notificationDelay = 10000; // 10 segundos

    setTimeout(() => {
      // O link que ser√° aberto ao clicar
      const urlToOpen = 'https://tedesqui.github.io/hologram_coin/';

      self.registration.showNotification('ùêáùêéùêãùêéùêÜùêëùêÄùêå ùêÇùêéùêàùêç', {
        body: 'ùóüùó∂ùó≥ùó≤ ùó∂ùòÄ ùó∫ùóºùóøùó≤ ùó≥ùòÇùóª ùòÑùó∂ùòÅùóµ ùóñùó•ùó¨ùó£ùóßùó¢. ùó¨ùóºùòÇ ùóÆùóøùó≤ ùóÆùóπùòÑùóÆùòÜùòÄ ùòÑùó≤ùóπùó∞ùóºùó∫ùó≤!!!',
        icon: 'videos/hannah.png',
        image: 'videos/hannah.png',
        tag: 'hologram-ola-tag',
        // NOVO: Anexa dados √† notifica√ß√£o, incluindo o link que queremos abrir.
        data: {
          url: urlToOpen 
        }
      });
    }, notificationDelay);
  }
});

// NOVO: Evento que √© disparado quando o usu√°rio clica na notifica√ß√£o.
self.addEventListener('notificationclick', event => {
  // Fecha a notifica√ß√£o para uma melhor experi√™ncia de usu√°rio.
  event.notification.close();

  // Abre o link que foi guardado nos dados da notifica√ß√£o.
  event.waitUntil(
    clients.openWindow(event.notification.data.url)
  );
});
